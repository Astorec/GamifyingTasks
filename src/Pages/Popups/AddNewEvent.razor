@namespace GamifyingTasks.Pages.Popups
@using GamifyingTasks.Classes
@using GamifyingTasks.Firebase.DB
<MudDialog>
    <DialogContent>
        <MudTextField T="string" Label="Event Name" @bind-Value="nameTxt" Required="true"
            RequiredError="Field can't be empty" />
        <MudTextField T="string" Label="Event Location" @bind-Value="locationTxt" AutoGrow Lines="5" Required="true"
            RequiredError="Field can't be empty" />
        <MudTextField T="string" Label="Event Description" @bind-Value="descTxt" AutoGrow Lines="5" Required="true"
            RequiredError="Field can't be empty" />
        <MudDatePicker @ref="_picker" label="Select Date" @bind-Date="date">
            <PickerActions>
                <MudButton Class="mr-auto align-self-start" OnClick="@(() => _picker.Clear())">Clear</MudButton>
                <MudButton OnClick="@(() => _picker.Close(false))">Cancel</MudButton>
                <MudButton Color="Color.Primary" OnClick="@(() => _picker.Close())">Ok</MudButton>
            </PickerActions>
        </MudDatePicker>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>


@code { 
    private bool hasDueDate = true;
    MudDatePicker _picker;
    DateTime? date = DateTime.Today;
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    Google.Cloud.Firestore.FirestoreDb db = DBCore.GetDBInstance();

    private async Task Submit()
    {
        if (nameTxt != null && descTxt != null && locationTxt != null)
        {

            Events newEvent = new Events
                {
                    EventName = nameTxt,
                    Description = descTxt,
                    EventLocation = locationTxt,
                    UserId = DBCore.CurrentLocalUser.Uid
                };


            newEvent.SetEventDate(date.Value.ToUniversalTime());

            await DBCore.AddNewEvent(newEvent);
            MudDialog.Close(DialogResult.Ok(true));
        }
    }
    void Cancel() => MudDialog.Cancel();
    public string nameTxt;
    public string descTxt;
    public string locationTxt;
}
