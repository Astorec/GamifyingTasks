@namespace GamifyingTasks.Pages.Popups
@using GamifyingTasks.Classes
@using GamifyingTasks.Firebase.DB
<MudDialog>
    <DialogContent>
        <MudTextField T="string" Label="Task Name" @bind-Value="nameTxt" Required="true"
            RequiredError="Field can't be empty" />
        <MudTextField T="string" Label="Task Description" @bind-Value="descTxt" AutoGrow Lines="5" Required="true"
            RequiredError="Field can't be empty" />
        <MudSelect T="string" Label="Task Difficulty" AnchorOrigin="Origin.BottomCenter" @bind-Value="difficultyTxt"
            Required="true" RequiredError="Select a Difficulty">
            <MudSelectItem Value="@("Easy")" />
            <MudSelectItem Value="@("Medium")" />
            <MudSelectItem Value="@("Hard")" />
            <MudSelectItem Value="@("Extra Hard")" />
        </MudSelect>
        <MudSwitch @bind-Value="@hasDueDate" Colour="Color.Info" Label="Toggle Due Date" />
        <MudDatePicker @ref="_picker" label="Select Date" @bind-Date="date" Disabled="@hasDueDate">
            <PickerActions>
                <MudButton Class="mr-auto align-self-start" OnClick="@(() => _picker.Clear())">Clear</MudButton>
                <MudButton OnClick="@(() => _picker.Close(false))">Cancel</MudButton>
                <MudButton Color="Color.Primary" OnClick="@(() => _picker.Close())">Ok</MudButton>
            </PickerActions>
        </MudDatePicker>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>


@code {
    private bool hasDueDate = true;
    MudDatePicker _picker;
    DateTime? date = DateTime.Today;
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    Google.Cloud.Firestore.FirestoreDb db = DBCore.GetDBInstance();

    private async Task Submit()
    {
        if (nameTxt != null && descTxt != null && difficultyTxt != null)
        {

            Tasks task = new Tasks
                {
                    Name = nameTxt,
                    Description = descTxt,
                    Difficulty = difficultyTxt,
                    UserId = await DBCore.GetUserID()
                };

            if (!hasDueDate && date.HasValue)
            {
                task.SetDueDate(date.Value.ToUniversalTime());
            }

            else
                task.SetDueDate(new DateTime(9999, 12, 31).ToUniversalTime());
            await DBCore.AddNewTask(task);
            MudDialog.Close(DialogResult.Ok(true));
        }
    }
    void Cancel() => MudDialog.Cancel();
    public string nameTxt;
    public string descTxt;
    public string difficultyTxt;
}