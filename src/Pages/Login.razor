@page "/"
@inject NavigationManager NavManager
@using GamifyingTasks.Firebase.DB
@using GamifyingTasks.Firebase.Authentication
@using Google.Cloud.Firestore
<MudMainContent>
    <MudTabs>
        <MudTabPanel Text="Login">
            <MudForm @onsubmit="HandleLogin">
                <MudTextField Label="Email" @bind-Value="email" T="string" Required />
                <MudTextField Label="Password" InputType="@PasswordInput" @bind-Value="pass" T="string" Required
                    Password />
                <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit">Login</MudButton>
            </MudForm>
        </MudTabPanel>
        <MudTabPanel Text="Register">
            <MudForm @onsubmit="HandleRegister">
                <MudTextField Label="Username" @bind-Value="regUserName" T="string" Required />
                <MudTextField Label="Email" @bind-Value="regEmail" T="string" Required />
                <MudTextField Label="Password" InputType="@PasswordInput" @bind-Value="regPass" T="string" Required
                    Password />
                <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit">Register</MudButton>
            </MudForm>

        </MudTabPanel>
    </MudTabs>
</MudMainContent>


@code {
    InputType PasswordInput = InputType.Password;

    private string email, pass;
    private string regEmail, regPass, regUserName;
    private bool displayError = false;

    private async Task HandleLogin()
    {
        await DBCore.GetUsers();
        
        if (email != "" && pass != "")
        {
            try
            {
                var currentUser = await FirebaseAuth.GetClient().SignInWithEmailAndPasswordAsync(email, pass);
                DBCore.IsLoggedIn = true;
                DBCore.SetCurrentUser(currentUser.User);
                NavManager.NavigateTo("/home");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error in HandleLogin(): {ex.Message}\n\nStack Trace: {ex.StackTrace}");
            }


        }
    }

    private async Task HandleRegister()
    {
        Console.WriteLine("Hit 01");
        if (regUserName != "" && regEmail != "" && regPass != "")
        {
            Console.WriteLine("Hit 02");
            try
            {
                var regUser = await FirebaseAuth.GetClient().CreateUserWithEmailAndPasswordAsync(regEmail, regPass, regUserName);

                var currentUser = await FirebaseAuth.GetClient().SignInWithEmailAndPasswordAsync(regEmail, regPass);
                var newUser = new Classes.Users
                    {
                        Uid = currentUser.User.Uid,
                        UserName = regUserName,
                        Email = regEmail,
                        DayReg = Timestamp.FromDateTime(DateTime.UtcNow),
                        Level = 1,
                        Exp = 0,
                        requiredExp = 200
                    };

                await DBCore.AddNewUser(newUser);
                DBCore.IsLoggedIn = true;
                DBCore.SetCurrentUser(currentUser.User);



                NavManager.NavigateTo("/Home");


            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error in HandleRegister(): {ex.Message}\n\nStack Trace: {ex.StackTrace}");
            }
        }
    }


}